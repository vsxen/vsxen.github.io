<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>prometheus on Cactus theme example</title>
    <link>https://example.com/tags/prometheus/</link>
    <description>Recent content in prometheus on Cactus theme example</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>You</copyright>
    <lastBuildDate>Tue, 22 Jan 2019 22:31:20 +0800</lastBuildDate><atom:link href="https://example.com/tags/prometheus/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>k8s 集群监控 --  Prometheus Operator</title>
      <link>https://example.com/posts/promthus-operator/</link>
      <pubDate>Tue, 22 Jan 2019 22:31:20 +0800</pubDate>
      
      <guid>https://example.com/posts/promthus-operator/</guid>
      <description>对于任何系统来说，监控都是不可或缺的东西，系统现在是什么样，与一周前相比是否需要调整资源等都需要一个监控系统来参考。对于k8s来说常用的开源监控方案也就是下面几种：
 heaspter+InfluxDB (已被弃用) Prometheus Open falcon Telegraf+InfluxDB  而且k8s所需的监控项目是比较多的，如下表：(k8s 1.14.0)    监控组件 metric PATＨ     API Server 6443/metrics   Controller Ｍanager 10257/metrics   kube Scheduler 10259/metrics   Etcd 2379/metrics   Kubelet API 10252/metrics   Cadvisor 10250/metrics/cadvisor   Node 9100/metrics    因此想要全面的监控集群状态，我个人感觉Prometheus是比较合适的，但是当你修改依次规则就需要重启一次。而且云原生中比较推荐使用声明式代替命令式，于是Prometheus Operator就诞生了，整体结构如下图：
Install 个人推荐的方式是从repo中apply一堆yaml，如果你擅长helm，也是可以的。
1git clone https://github.com/coreos/prometheus-operator 2kubectl get crd 3NAME CREATED AT 4alertmanagers.monitoring.coreos.com 2018-09-12T02:13:19Z 5prometheuses.monitoring.coreos.com 2018-09-12T02:13:19Z 6prometheusrules.</description>
    </item>
    
  </channel>
</rss>
